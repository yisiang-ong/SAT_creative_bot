{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yisiang\\\\OneDrive\\\\Desktop\\\\MSc AI\\\\007 MSC AI Individual\\\\SATbot3.0\\\\view\\\\src\\\\config.js\";\n// Config starter code\nimport React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport YesNoOptions from \"./widgets/options/GeneralOptions/YesNoOptions\";\nimport ProtocolOptions from \"./widgets/options/GeneralOptions/ProtocolOptions\";\nimport ContinueOptions from \"./widgets/options/GeneralOptions/ContinueOptions\";\nimport FeelDoingOptions from \"./widgets/options/GeneralOptions/FeelDoingOptions\";\nimport EmotionOptions from \"./widgets/options/GeneralOptions/EmotionOptions\";\nimport EventOptions from \"./widgets/options/GeneralOptions/EventOptions\";\nimport YesNoProtocolOptions from \"./widgets/options/GeneralOptions/YesNoProtocolsOptions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"SATbot\";\nconst config = {\n  botName: botName,\n  initialMessages: [createChatBotMessage(\"Please enter your username:\", {\n    withAvatar: true,\n    delay: 50\n  })],\n  state: {\n    userState: null,\n    username: null,\n    password: null,\n    sessionID: null,\n    protocols: [],\n    askingForProtocol: false\n  },\n  customComponents: {\n    header: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '16px',\n        fontFamily: 'Arial',\n        borderTopLeftRadius: '5px',\n        borderTopRightRadius: '5px',\n        background: '#EBECED',\n        color: '#4A4A4A',\n        padding: '8px',\n        borderBottom: '1px solid #B8BABA'\n      },\n      children: \"SATbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this),\n    botAvatar: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"react-chatbot-kit-chat-bot-avatar-container\",\n      style: {\n        fontFamily: 'Arial'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"react-chatbot-kit-chat-bot-avatar-letter\",\n        children: \"S\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 109\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }, this)\n  },\n  widgets: [{\n    widgetName: \"YesNo\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(YesNoOptions, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 30\n    }, this),\n    mapStateToProps: [\"userState\", \"sessionID\"]\n  }, {\n    widgetName: \"Continue\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(ContinueOptions, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 30\n    }, this),\n    mapStateToProps: [\"userState\", \"sessionID\"]\n  }, {\n    widgetName: \"Emotion\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(EmotionOptions, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 30\n    }, this),\n    mapStateToProps: [\"userState\", \"sessionID\"]\n  }, // {\n  //   widgetName: \"Feedback\",\n  //   widgetFunc: (props) => <FeedbackOptions {...props} />,\n  //   mapStateToProps: [\"userState\", \"sessionID\"],\n  // },\n  {\n    widgetName: \"FeelDoing\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(FeedbackOptions, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 30\n    }, this),\n    mapStateToProps: [\"userState\", \"sessionID\"]\n  }, {\n    widgetName: \"Protocol\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(ProtocolOptions, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 30\n    }, this),\n    mapStateToProps: [\"userState\", \"sessionID\", \"protocols\", \"askingForProtocol\"]\n  }, {\n    widgetName: \"YesNoProtocols\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(YesNoProtocolOptions, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 30\n    }, this),\n    mapStateToProps: [\"userState\", \"sessionID\"]\n  }, {\n    widgetName: \"RecentDistant\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(EventOptions, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 30\n    }, this),\n    mapStateToProps: [\"userState\", \"sessionID\"]\n  }]\n};\nexport default config;","map":{"version":3,"sources":["C:/Users/yisiang/OneDrive/Desktop/MSc AI/007 MSC AI Individual/SATbot3.0/view/src/config.js"],"names":["React","createChatBotMessage","YesNoOptions","ProtocolOptions","ContinueOptions","FeelDoingOptions","EmotionOptions","EventOptions","YesNoProtocolOptions","botName","config","initialMessages","withAvatar","delay","state","userState","username","password","sessionID","protocols","askingForProtocol","customComponents","header","height","fontFamily","borderTopLeftRadius","borderTopRightRadius","background","color","padding","borderBottom","botAvatar","widgets","widgetName","widgetFunc","props","mapStateToProps"],"mappings":"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","sourcesContent":["// Config starter code\r\nimport React from \"react\";\r\nimport { createChatBotMessage } from \"react-chatbot-kit\";\r\n\r\nimport YesNoOptions from \"./widgets/options/GeneralOptions/YesNoOptions\";\r\nimport ProtocolOptions from \"./widgets/options/GeneralOptions/ProtocolOptions\";\r\nimport ContinueOptions from \"./widgets/options/GeneralOptions/ContinueOptions\";\r\nimport FeelDoingOptions from \"./widgets/options/GeneralOptions/FeelDoingOptions\";\r\nimport EmotionOptions from \"./widgets/options/GeneralOptions/EmotionOptions\";\r\nimport EventOptions from \"./widgets/options/GeneralOptions/EventOptions\";\r\nimport YesNoProtocolOptions from \"./widgets/options/GeneralOptions/YesNoProtocolsOptions\";\r\nconst botName = \"SATbot\";\r\n\r\nconst config = {\r\n  botName: botName,\r\n  initialMessages: [\r\n    createChatBotMessage(\"Please enter your username:\", {\r\n      withAvatar: true,\r\n      delay: 50,\r\n    }),\r\n  ],\r\n\r\n  state: {\r\n    userState: null,\r\n    username: null,\r\n    password: null,\r\n    sessionID: null,\r\n    protocols: [],\r\n    askingForProtocol: false\r\n  },\r\n  customComponents: {\r\n    header: () => <div style={{height: '16px', fontFamily: 'Arial', borderTopLeftRadius: '5px', borderTopRightRadius: '5px',\r\n    background: '#EBECED', color: '#4A4A4A', padding: '8px', borderBottom: '1px solid #B8BABA'}}>SATbot</div>,\r\n    botAvatar: () => <div class=\"react-chatbot-kit-chat-bot-avatar-container\" style={{fontFamily: 'Arial'}}><p class=\"react-chatbot-kit-chat-bot-avatar-letter\">S</p></div>\r\n  },\r\n\r\n  widgets: [\r\n    {\r\n      widgetName: \"YesNo\",\r\n      widgetFunc: (props) => <YesNoOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"Continue\",\r\n      widgetFunc: (props) => <ContinueOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"Emotion\",\r\n      widgetFunc: (props) => <EmotionOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    // {\r\n    //   widgetName: \"Feedback\",\r\n    //   widgetFunc: (props) => <FeedbackOptions {...props} />,\r\n    //   mapStateToProps: [\"userState\", \"sessionID\"],\r\n    // },\r\n    {\r\n      widgetName: \"FeelDoing\",\r\n      widgetFunc: (props) => <FeedbackOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"Protocol\",\r\n      widgetFunc: (props) => <ProtocolOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\", \"protocols\", \"askingForProtocol\"],\r\n    },\r\n    {\r\n      widgetName: \"YesNoProtocols\",\r\n      widgetFunc: (props) => <YesNoProtocolOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n    {\r\n      widgetName: \"RecentDistant\",\r\n      widgetFunc: (props) => <EventOptions {...props} />,\r\n      mapStateToProps: [\"userState\", \"sessionID\"],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default config;\r\n"]},"metadata":{},"sourceType":"module"}